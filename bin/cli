#!/usr/bin/env node
var commands = require('../lib/commands.js'),
	program = require('commander'),
	util = require('util')

var help = true
program.version('1.0.0')
program
	.command('check [appdir]')
	.description('Check for updates and dependencies with updates.')
	.action(function(appdir) {
		help = false
		console.log('checking...')
		commands.check(appdir || process.cwd(), function (err, found) {
			if(err) return console.log('error: ' + util.inspect(err))
			if(!found) {
				console.log('no updates found.');
			} else {
				console.log('found: ' + util.inspect(found))
			}
		})
	})

program
	.command('watch [appdir]')
	.description('Watch for updates on an interval.')
	.action(function (appdir) {
		help = false
		commands.watch(appdir || process.cwd())
	})

program
	.command('update [appdir]')
	.description('Update all dependencies right now.')
	.action(function (appdir) {
		help = false
		commands.update(appdir || process.cwd(), function (err) {
			if(err) return console.log('' + util.inspect(err))			
			console.log('updated!')		
		})
	})

program
	.command('list [appdir]')
	.description('List all current dependencies and their versions')
	.action(function (appdir) {
		help = false
		commands.list(appdir || process.cwd(), function (err, deps) {
			if(err) return console.log('' + err)
			console.log(util.inspect(deps))
		})
	})

program
	.command('isvalid [appdir]')
	.alias('isValid')
	.alias('valid')
	.description('Determines if all dependencies and plugins are already installed and satisfy the version requirements')
	.action(function (appdir) {
		help = false
		commands.isValid(appdir || process.cwd(), function (err, valid) {
			if(err) return console.log('' + err)
			console.log(valid)
		})
	})

program.parse(process.argv)
if(help) {
	program.help()
	process.exit(1)
}